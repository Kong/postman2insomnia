{
  "_comment": "Updated Default Transforms Configuration with Request Headers Fix",
  "_description": "Configure preprocessing and postprocessing transformations",

  "preprocess": [
    {
      "name": "deprecated-pm-syntax",
      "description": "Fix deprecated Postman responseHeaders array access",
      "pattern": "pm\\.responseHeaders\\[(.*?)\\]",
      "replacement": "pm.response.headers.get($1)",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "legacy-environment-access",
      "description": "Convert old postman.getEnvironmentVariable calls",
      "pattern": "postman\\.getEnvironmentVariable\\((.*?)\\)",
      "replacement": "pm.environment.get($1)",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "legacy-global-access",
      "description": "Convert old postman.getGlobalVariable calls",
      "pattern": "postman\\.getGlobalVariable\\((.*?)\\)",
      "replacement": "pm.globals.get($1)",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "old-test-syntax",
      "description": "Convert legacy tests[] syntax to pm.test()",
      "pattern": "tests\\[(.*?)\\]\\s*=\\s*(.*?);",
      "replacement": "pm.test($1, function() { pm.expect($2).to.be.true; });",
      "flags": "g",
      "enabled": false
    },
    {
      "name": "responseCode-to-status",
      "description": "Convert deprecated responseCode to response.code",
      "pattern": "responseCode\\.code",
      "replacement": "pm.response.code",
      "flags": "g",
      "enabled": true
    }
  ],

  "postprocess": [
    {
      "name": "fix-header-value-access",
      "description": "Fix header.get().method() to header.get().value.method()",
      "pattern": "insomnia\\.response\\.headers\\.get\\(([^)]+)\\)\\.(?!value\\b)(\\w+)",
      "replacement": "insomnia.response.headers.get($1).value.$2",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "fix-header-conditional-access",
      "description": "Fix header access in conditional statements",
      "pattern": "insomnia\\.response\\.headers\\.get\\(([^)]+)\\)\\s*&&\\s*insomnia\\.response\\.headers\\.get\\(\\1\\)\\.(?!value\\b)(\\w+)",
      "replacement": "insomnia.response.headers.get($1) && insomnia.response.headers.get($1).value.$2",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "fix-header-string-comparison",
      "description": "Fix header string comparisons to use .value",
      "pattern": "insomnia\\.response\\.headers\\.get\\(([^)]+)\\)\\s*(===|!==|==|!=)\\s*",
      "replacement": "insomnia.response.headers.get($1).value $2 ",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "fix-header-includes",
      "description": "Fix header.includes() calls to use .value.includes()",
      "pattern": "insomnia\\.response\\.headers\\.get\\(([^)]+)\\)\\.includes\\(",
      "replacement": "insomnia.response.headers.get($1).value.includes(",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "fix-header-string-methods",
      "description": "Fix common string methods on headers",
      "pattern": "insomnia\\.response\\.headers\\.get\\(([^)]+)\\)\\.(toLowerCase|toUpperCase|trim|split|substring|substr|slice|replace|match|search)\\(",
      "replacement": "insomnia.response.headers.get($1).value.$2(",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "fix-request-headers-add",
      "description": "Convert insomnia.request.headers.add() to insomnia.request.addHeader()",
      "pattern": "insomnia\\.request\\.headers\\.add\\(\\s*\\{([\\s\\S]*?)\\}\\s*\\);?",
      "replacement": "insomnia.request.addHeader({$1});",
      "flags": "g",
      "enabled": true
    },
    {
      "name": "fix-response-json-access",
      "description": "Ensure response.json() returns proper object",
      "pattern": "insomnia\\.response\\.json\\(\\)",
      "replacement": "insomnia.response.json()",
      "flags": "g",
      "enabled": false
    },
    {
      "name": "custom-api-fixes",
      "description": "Add your custom API fixes here",
      "pattern": "your-pattern-here",
      "replacement": "your-replacement-here",
      "flags": "g",
      "enabled": false
    }
  ]
}
